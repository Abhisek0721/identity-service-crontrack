version: '3.9'

services:
  identity-service-creato-dev:
    build: .
    command: sh -c "python manage.py migrate && python manage.py consume_messages & exec python manage.py runserver 0.0.0.0:${APP_PORT}"
    ports:
      - ${APP_PORT}:${APP_PORT}
    restart: always
    depends_on:
      - identity-postgres-service-creato-dev
      - identity-redis-service-creato-dev
    environment:
      - DEBUG=1
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - APP_NAME=${APP_NAME}
      - EMAIL_HOST_USER = ${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD = ${EMAIL_HOST_PASSWORD}
      - FRONTEND_BASE_URL=${FRONTEND_BASE_URL}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - FRONTEND_MQ_PORT=${FRONTEND_MQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
      - RABBITMQ_EMAIL_VERIFICATION_QUEUE=${RABBITMQ_EMAIL_VERIFICATION_QUEUE}
      - RABBITMQ_EMAIL_VERIFICATION_ROUTING_KEY=${RABBITMQ_EMAIL_VERIFICATION_ROUTING_KEY}
      - RABBITMQ_WORKSPACE_INVITE_QUEUE = ${RABBITMQ_WORKSPACE_INVITE_QUEUE}
      - RABBITMQ_WORKSPACE_INVITE_ROUTING_KEY = ${RABBITMQ_WORKSPACE_INVITE_ROUTING_KEY}
    networks:
      - shared_net

  identity-postgres-service-creato-dev:
    image: postgres:14.1-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
    - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
  
  identity-redis-service-creato-dev:
    image: redis:6.2.6-alpine
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis_data:/data   # <-- Add this to persist Redis data

volumes:
  postgres_data:
  redis_data:

networks:
  shared_net:
    external: true